app myMemerator {
  wasp: {
    version: "^0.17.1"
  },
  title: "my-memerator",
  head: [
    "<link rel='icon' href='/favicon.ico' />",
  ],
  client: {
    rootComponent: import { Layout } from "@src/Layout",
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@src/pages/Home",
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup"
}

route EditMemeRoute { path: "/meme/:id", to: EditMemePage }
page EditMemePage {
  component: import { EditMemePage } from "@src/pages/EditMemePage",
  authRequired: true
}

action createMeme {
  fn: import { createMeme } from "@src/actions.js",
  entities: [Meme, Template, User]
}

action editMeme {
  fn: import { editMeme } from "@src/actions.js",
  entities: [Meme, Template, User]
}

action deleteMeme {
  fn: import { deleteMeme } from "@src/actions.js",
  entities: [Meme]
}

query getAllMemes {
  fn: import { getAllMemes } from "@src/queries.js",
  entities: [Meme]
}

query getMeme {
  fn: import { getMeme } from "@src/queries.js",
  entities: [Meme]
}

job storeMemeTemplates {
  executor: PgBoss,
  perform: {
    fn: import { fetchAndStoreMemeTemplates } from "@src/workers.js",
  },
  schedule: {
    cron: "0 7 * * *"
  },
  entities: [Template]
}
